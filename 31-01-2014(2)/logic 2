def product_except_self(nums):
    n = len(nums)
    
    # Initialize result array with all elements set to 1
    result = [1] * n
    
    # Calculate prefix products
    left_product = 1
    for i in range(n):
        result[i] *= left_product
        left_product *= nums[i]
    
    # Calculate suffix products and multiply with the previously calculated result
    right_product = 1
    for i in range(n - 1, -1, -1):
        result[i] *= right_product
        right_product *= nums[i]
    
    return result

# Example usage:
nums1 = [1, 2, 3, 4]
print(product_except_self(nums1))  # Output: [24, 12, 8, 6]

nums2 = [-1, 1, 0, -3, 3]
print(product_except_self(nums2))  # Output: [0, 0, 9, 0, 0]
